
package frontend.game;

import backend.system.Address;
import backend.system.ChatClient;
import java.net.InetAddress;
import java.net.Socket;
import java.text.DateFormat;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;


public class ChatPanel extends javax.swing.JPanel {

    private final String pName;
    private ChatClient chatClient;
    
    public ChatPanel(String pName, Address server) {
        this.pName = pName;
        initComponents();
        connect(server);
    }
    
    public void ready(){
    	Date now = new Date();
        chatClient.send("[" + DateFormat.getDateTimeInstance().format(now).toString() + "] " + pName + ": Ready!");
    }
    
    private void connect(Address s){
        try{
            Socket socket = new Socket(s.getAdd(),51138);
            chatClient = new ChatClient(socket);
            Thread t = new Thread(chatClient);
            t.start();
        }catch(Exception e){
        	e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Server not responding!");
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msgArea = new javax.swing.JTextArea();
        msgBox = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        msgArea.setEditable(false);
        msgArea.setColumns(20);
        msgArea.setRows(5);
        jScrollPane1.setViewportView(msgArea);

        msgBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                msgBoxKeyPressed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msgBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(msgBox)
                    .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        String msg = msgBox.getText();
        
        if(!msg.equals("")){
        	Date now = new Date();
            chatClient.send("[" + DateFormat.getDateTimeInstance().format(now).toString() + "] " + pName + ": " + msg);
            msgBox.requestFocus();
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void msgBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_msgBoxKeyPressed
        
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            String msg = msgBox.getText();

            if(!msg.equals("")){
            	Date now = new Date();
                chatClient.send("[" + DateFormat.getDateTimeInstance().format(now).toString() + "] " + pName + ": " + msg);
                msgBox.requestFocus();
            }
        }
    }//GEN-LAST:event_msgBoxKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea msgArea;
    public static javax.swing.JTextField msgBox;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables
}
